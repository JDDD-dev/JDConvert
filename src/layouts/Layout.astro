---
import Header from "@/components/Header.astro"
import Footer from "@/components/Footer.astro"
import "@/styles/globals.css"
import { getLangFromUrl } from "@/i18n/utils"
import "@fontsource-variable/quicksand"
import SpeedInsights from "@vercel/speed-insights/astro"

interface Props {
	title: string
	description: string
}

const { title, description } = Astro.props

const lang = getLangFromUrl(Astro.url)
---

<!doctype html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="keywords" content="convert, transform" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div
			class="absolute top-0 z-[-2] h-screen w-screen rotate-180 transform bg-white bg-[radial-gradient(60%_120%_at_50%_50%,hsla(0,0%,100%,0)_0,rgba(252,205,238,.5)_100%)] dark:bg-neutral-950 dark:bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]"
		>
		</div>
		<main class="absolute h-full w-full">
			<Header />
			<slot />
			<Footer />
		</main>
		<SpeedInsights />
	</body>
</html>

<style is:global>
	body {
		height: 100vh;
		display: flex;
	}

	html {
		font-family: "Quicksand Variable", system-ui, sans-serif;
	}
</style>

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme")
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"
	}
	const isDark = getThemePreference() === "dark"
	document.documentElement.classList[isDark ? "add" : "remove"]("dark")

	if (typeof localStorage !== "undefined") {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark")
			localStorage.setItem("theme", isDark ? "dark" : "light")
		})
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ["class"] })
	}
</script>
